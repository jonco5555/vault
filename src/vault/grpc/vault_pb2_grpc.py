# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

import vault.grpc.vault_pb2 as vault__pb2

GRPC_GENERATED_VERSION = "1.74.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + " but the generated code in vault_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class ManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
            "/vault.Manager/Register",
            request_serializer=vault__pb2.RegisterRequest.SerializeToString,
            response_deserializer=vault__pb2.RegisterResponse.FromString,
            _registered_method=True,
        )
        self.StoreSecret = channel.unary_unary(
            "/vault.Manager/StoreSecret",
            request_serializer=vault__pb2.StoreSecretRequest.SerializeToString,
            response_deserializer=vault__pb2.StoreSecretResponse.FromString,
            _registered_method=True,
        )
        self.RetrieveSecret = channel.unary_unary(
            "/vault.Manager/RetrieveSecret",
            request_serializer=vault__pb2.RetrieveSecretRequest.SerializeToString,
            response_deserializer=vault__pb2.RetrieveSecretResponse.FromString,
            _registered_method=True,
        )


class ManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def StoreSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RetrieveSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Register": grpc.unary_unary_rpc_method_handler(
            servicer.Register,
            request_deserializer=vault__pb2.RegisterRequest.FromString,
            response_serializer=vault__pb2.RegisterResponse.SerializeToString,
        ),
        "StoreSecret": grpc.unary_unary_rpc_method_handler(
            servicer.StoreSecret,
            request_deserializer=vault__pb2.StoreSecretRequest.FromString,
            response_serializer=vault__pb2.StoreSecretResponse.SerializeToString,
        ),
        "RetrieveSecret": grpc.unary_unary_rpc_method_handler(
            servicer.RetrieveSecret,
            request_deserializer=vault__pb2.RetrieveSecretRequest.FromString,
            response_serializer=vault__pb2.RetrieveSecretResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "vault.Manager", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("vault.Manager", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class Manager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/vault.Manager/Register",
            vault__pb2.RegisterRequest.SerializeToString,
            vault__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def StoreSecret(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/vault.Manager/StoreSecret",
            vault__pb2.StoreSecretRequest.SerializeToString,
            vault__pb2.StoreSecretResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RetrieveSecret(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/vault.Manager/RetrieveSecret",
            vault__pb2.RetrieveSecretRequest.SerializeToString,
            vault__pb2.RetrieveSecretResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )


class BootstrapStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateShares = channel.unary_unary(
            "/vault.Bootstrap/GenerateShares",
            request_serializer=vault__pb2.GenerateSharesRequest.SerializeToString,
            response_deserializer=vault__pb2.GenerateSharesResponse.FromString,
            _registered_method=True,
        )


class BootstrapServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GenerateShares(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_BootstrapServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GenerateShares": grpc.unary_unary_rpc_method_handler(
            servicer.GenerateShares,
            request_deserializer=vault__pb2.GenerateSharesRequest.FromString,
            response_serializer=vault__pb2.GenerateSharesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "vault.Bootstrap", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("vault.Bootstrap", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class Bootstrap(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GenerateShares(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/vault.Bootstrap/GenerateShares",
            vault__pb2.GenerateSharesRequest.SerializeToString,
            vault__pb2.GenerateSharesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )


class ShareServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreShare = channel.unary_unary(
            "/vault.ShareServer/StoreShare",
            request_serializer=vault__pb2.StoreShareRequest.SerializeToString,
            response_deserializer=vault__pb2.StoreShareResponse.FromString,
            _registered_method=True,
        )
        self.Decrypt = channel.unary_unary(
            "/vault.ShareServer/Decrypt",
            request_serializer=vault__pb2.DecryptRequest.SerializeToString,
            response_deserializer=vault__pb2.DecryptResponse.FromString,
            _registered_method=True,
        )


class ShareServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StoreShare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Decrypt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ShareServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "StoreShare": grpc.unary_unary_rpc_method_handler(
            servicer.StoreShare,
            request_deserializer=vault__pb2.StoreShareRequest.FromString,
            response_serializer=vault__pb2.StoreShareResponse.SerializeToString,
        ),
        "Decrypt": grpc.unary_unary_rpc_method_handler(
            servicer.Decrypt,
            request_deserializer=vault__pb2.DecryptRequest.FromString,
            response_serializer=vault__pb2.DecryptResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "vault.ShareServer", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("vault.ShareServer", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class ShareServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StoreShare(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/vault.ShareServer/StoreShare",
            vault__pb2.StoreShareRequest.SerializeToString,
            vault__pb2.StoreShareResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def Decrypt(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/vault.ShareServer/Decrypt",
            vault__pb2.DecryptRequest.SerializeToString,
            vault__pb2.DecryptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
